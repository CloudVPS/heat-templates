heat_template_version: 2013-05-23

#description: Create InstanceFloat

parameters:
  name:
    type: string
  key_name:
    type: string
  image:
    type: string
  flavor:
    type: string
  private_net:
    type: string
  sec_group:
    type: string
  private_subnet:
    type: string
  public_net:
    type: string
  user_data:
    type: string
  availability_zones:
    type: comma_delimited_list
  index:
    type: string

resources:

################
## Instances ###
################

  instance:
    type: OS::Nova::Server
    properties:
      name: { get_param: name }
      key_name: { get_param: key_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks: [{ network: { get_param: private_net }}]
#        - network: { get_param: private_net }
#        - port: { get_resource: server2_port 
      user_data_format: RAW
      user_data: { get_param: user_data }
      availability_zone: { get_param: [ availability_zones, get_param: index ] }

#  instance_port:
#    type: OS::Neutron::Port
#    properties:
#      network_id: { get_param: private_net }
#      fixed_ips:
#        - subnet_id: { get_param: private_subnet }

  instance_floating_ip:
    type: OS::Nova::FloatingIP
    properties:
      pool: { get_param: public_net }
#      floating_network: { get_param: public_net }
#      port_id: { get_resource: instance_port }

  instance_floating_ip_assoc0_instance0:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: instance_floating_ip }
      server_id: { get_resource: instance }

outputs:
  instance_resource_id:
    description: The id of each deployed instance
    value: { get_resource: instance }
  instance_ip:
    description: "ip address"
    value: { get_attr: [ instance, first_address ]}
  floating_ip:
    description: "floating ip address"
    value: { get_attr: [ instance_floating_ip, ip ] }


