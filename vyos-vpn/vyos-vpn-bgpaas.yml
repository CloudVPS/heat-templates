heat_template_version: 2015-04-30

description: >
  HOT template to create a BgpAsAService:

parameters:
  autonomous_system:
    type: string
    description: 16 bit BGP Autonomous System number for the cluster.
    default: '65000'

  flavor:
    type: string
    description: Flavor
    default: m1.small

  image:
    type: string
    label: vyos Router Image name or UUID
    description: vyos image name or UUID
    default: "vyos-1.1.7"

resources:
  RouterIPAM:
    type: OS::ContrailV2::NetworkIpam
    properties:
      name: vpn_network

  RouterNetwork:
    type: OS::ContrailV2::VirtualNetwork
    depends_on: [ RouterIPAM ]
    properties:
      name: vpn_network
      network_ipam_refs: [{ get_resource: RouterIPAM }]
      network_ipam_refs_data:
        - network_ipam_refs_data_ipam_subnets:
          - network_ipam_refs_data_ipam_subnets_addr_from_start: True
            network_ipam_refs_data_ipam_subnets_subnet:
              network_ipam_refs_data_ipam_subnets_subnet_ip_prefix: 10.255.255.248
              network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len: 29

  RouterSecurityGroup:
    type: OS::Neutron::SecurityGroup
    properties:
      name: vpn-allow-all
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          direction: ingress
        - remote_ip_prefix: 0.0.0.0/0
          direction: egress

  RouterInterface:
    type: OS::ContrailV2::VirtualMachineInterface
    properties:
      virtual_network_refs: [{ list_join: [':', { get_attr: [ RouterNetwork, fq_name ] } ] }]
      security_group_refs: [{ get_resource: RouterSecurityGroup }]

  RouterInterfaceIp:
    type: OS::ContrailV2::InstanceIp
    depends_on: [ RouterInterface, RouterNetwork ]
    properties:
      virtual_machine_interface_refs: [{ get_resource: RouterInterface }]
      virtual_network_refs: [{ list_join: [':', { get_attr: [ RouterNetwork, fq_name ] } ] }]

  RouterInterfaceExternal:
    type: OS::Neutron::Port
    properties:
      admin_state_up: true
      network_id: net-public
      security_groups:
      - { get_resource: RouterSecurityGroup }

  RouterInstance:
    type: OS::Nova::Server
    depends_on: [ RouterInterfaceIp, RouterInterfaceExternal ]
    properties:
      name: vpn-router
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks:
        - port: { get_resource: RouterInterfaceExternal }
        - port: { get_resource: RouterInterface }
      user_data:
        list_join: [ "\n", ['#vyos-config',
          'interfaces {',
            'ethernet eth1 {',
              { list_join: ['', ['address ', { get_attr: [ RouterInterfaceIp, instance_ip_address ] }, '/29']]},
            '}', # end ethernet eth1
          '}',  # end interfaces
          'protocols {',
            { list_join: [' ', ['bgp', { get_param: autonomous_system }, '{']]},
              'neighbor 10.255.255.249 {',
                'remote-as 64512',
              '}', # end neighbor
            '}',  # end bgp 65000
          '}'] # end protocols
        ]
      user_data_format: RAW

  BgpService:
    type: OS::ContrailV2::BgpAsAService
    properties:
      name: vpn-peer-bgp-service
      bgpaas_session_attributes:
        bgpaas_session_attributes_admin_down: False
        bgpaas_session_attributes_hold_time: 60
        bgpaas_session_attributes_address_families:
          bgpaas_session_attributes_address_families_family: ['inet']
      bgpaas_ip_address: { get_attr: [ RouterInterfaceIp, instance_ip_address ] }
      autonomous_system: { get_param: autonomous_system }
      virtual_machine_interface_refs: [{ get_resource: RouterInterface }]

