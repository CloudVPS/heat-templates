heat_template_version: 2016-04-08

description: Create a basic internal network, router and a allowall securitygroup.
## Use as: openstack stack create -t LBaaS.yml stackname
## WIP: Needs to have ports added for the security group

################
## Parameters ##
################

parameters:
  public_net: 
    type: string
    label: 
    description: ID or name of public network for which floating IP addresses will be allocated
    default: floating

  private_net_name:
    type: string
    label:
    description: Name of private network to be created
    default: private-net

  private_subnet_name: 
    type: string
    label: 
    description: Name of private subnet
    default: private-subnet

  private_net_cidr:
    type: string
    label:
    description: Private network address (CIDR notation)
    default: 10.0.0.0/24

  private_net_gateway:
    type: string
    label:
    description: Private network gateway address
    default: 10.0.0.1

  security_group_name:
    default: default-allow-all
    description: Name of the security group for the loadbalancer
    type: string


resources:

##############
## Network ###
##############

  private_net:
    type: OS::Neutron::Net
    properties:
      name: {get_param: private_net_name }

  private_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: { get_param: private_subnet_name }
      network_id: { get_resource: private_net }
      cidr: { get_param: private_net_cidr }
      gateway_ip: { get_param: private_net_gateway }
      dns_nameservers: [{ get_param: private_net_gateway }]

  router:
    type: OS::Neutron::Router
    properties:
      admin_state_up: true
      external_gateway_info:
        network: { get_param: public_net }


  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: private_subnet }

  sec_group_allow_all:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { get_param: security_group_name }
      rules:
#TCP
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          direction: egress
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          direction: ingress
#UDP
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          direction: egress
        - remote_ip_prefix: 0.0.0.0/0
          protocol: udp
          direction: ingress
#ICMP
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp
          direction: ingress
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp
          direction: egress


#############
## Outputs ##
#############

outputs:
  Private_network_id:
    value: { get_resource: private_net }
    description: GUID of the network created by this template
  Private_subnet_id:
    value: { get_resource: private_subnet }
    description: GUID of the subnet created by this template
  Network_router_id:
    value: { get_resource: router }
    description: GUID of the router created by this templ

